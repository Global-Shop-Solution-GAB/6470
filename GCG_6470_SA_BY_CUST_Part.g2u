Program.Sub.ScreenSU.Start
Gui.SS_Form1..create
Gui.SS_Form1..caption("Sales Analysis by Customer, Part Number")
Gui.SS_Form1..size(6160,7450)
Gui.SS_Form1..position(0,0)
Gui.SS_Form1..forecolor(0)
Gui.SS_Form1..fontstyle()
Gui.SS_Form1..BackColor(-2147483633)
Gui.SS_Form1..maxbutton(False)
Gui.SS_Form1..minbutton(False)
Gui.SS_Form1..mousepointer(0)
Gui.SS_Form1..sizeable(False)
Gui.SS_Form1..event(UnLoad,ss_form1_unload)
Gui.SS_Form1..MinX(0)
Gui.SS_Form1..MinY(0)
Gui.SS_Form1.lbl_dtp1_Begdate.create(label,"Beginning Invoice Date",True,1800,200,1,100,135,True,0,Arial,8,-2147483633,0)
Gui.SS_Form1.lbl_dtp1_Begdate.LabelStretch(True)
Gui.SS_Form1.lbl_dtp1_Begdate.setinternationalid(779801)
Gui.SS_Form1.dtp1_Begdate.create(datepicker)
Gui.SS_Form1.dtp1_Begdate.size(1800,345)
Gui.SS_Form1.dtp1_Begdate.position(100,335)
Gui.SS_Form1.dtp1_Begdate.fontname("Arial")
Gui.SS_Form1.dtp1_Begdate.tabstop(True)
Gui.SS_Form1.dtp1_Begdate.tabindex(1)
Gui.SS_Form1.lbl_dtp1_Enddate.create(label,"Ending Invoice Date",True,1800,200,1,1985,135,True,0,Arial,8,-2147483633,0)
Gui.SS_Form1.lbl_dtp1_Enddate.LabelStretch(True)
Gui.SS_Form1.lbl_dtp1_Enddate.setinternationalid(779901)
Gui.SS_Form1.dtp1_Enddate.create(datepicker)
Gui.SS_Form1.dtp1_Enddate.size(1800,345)
Gui.SS_Form1.dtp1_Enddate.position(1985,335)
Gui.SS_Form1.dtp1_Enddate.fontname("Arial")
Gui.SS_Form1.dtp1_Enddate.tabstop(True)
Gui.SS_Form1.dtp1_Enddate.tabindex(2)
Gui.SS_Form1.chk1_Alldates.create(checkbox)
Gui.SS_Form1.chk1_Alldates.Caption("All Dates")
Gui.SS_Form1.chk1_Alldates.size(1800,300)
Gui.SS_Form1.chk1_Alldates.position(105,690)
Gui.SS_Form1.chk1_Alldates.setinternationalid(19700)
Gui.SS_Form1.chk1_Alldates.event(Click,chk1_alldates_click)
Gui.SS_Form1.chk1_Alldates.tabstop(True)
Gui.SS_Form1.chk1_Alldates.tabindex(3)
Gui.SS_Form1.lbl_txt1_BegCust.create(label,"Beginning Customer Number",True,1800,200,1,100,1235,True,0,Arial,8,-2147483633,0)
Gui.SS_Form1.lbl_txt1_BegCust.LabelStretch(True)
Gui.SS_Form1.lbl_txt1_BegCust.setinternationalid(61000)
Gui.SS_Form1.txt1_BegCust.create(textbox,"",True,1800,300,1,105,1440,True,0,Arial,8,16777215,1)
Gui.SS_Form1.txt1_BegCust.tabstop(True)
Gui.SS_Form1.txt1_BegCust.tabindex(4)
Gui.SS_Form1.txt1_BegCust.Event(GotFocus,txt1_begCust_gotfocus)
Gui.SS_Form1.txt1_BegCust.Event(LostFocus,txt1_begCust_lostfocus)
Gui.SS_Form1.cmd_txt1_BegCust.create(button)
Gui.SS_Form1.cmd_txt1_BegCust.Caption("^")
Gui.SS_Form1.cmd_txt1_BegCust.size(330,330)
Gui.SS_Form1.cmd_txt1_BegCust.position(1980,1440)
Gui.SS_Form1.cmd_txt1_BegCust.event(Click,cmd_txt1_begcust_click)
Gui.SS_Form1.cmd_txt1_BegCust.tabstop(True)
Gui.SS_Form1.cmd_txt1_BegCust.tabindex(5)
Gui.SS_Form1.lbl_txt1_EndCust.create(label,"Ending Customer Number",True,1800,200,1,2455,1235,True,0,Arial,8,-2147483633,0)
Gui.SS_Form1.lbl_txt1_EndCust.LabelStretch(True)
Gui.SS_Form1.lbl_txt1_EndCust.setinternationalid(212900)
Gui.SS_Form1.txt1_EndCust.create(textbox,"",True,1800,300,1,2460,1440,True,0,Arial,8,16777215,1)
Gui.SS_Form1.txt1_EndCust.tabstop(True)
Gui.SS_Form1.txt1_EndCust.tabindex(6)
Gui.SS_Form1.txt1_EndCust.Event(GotFocus,txt1_endCust_gotfocus)
Gui.SS_Form1.cmd_txt1_EndCust.create(button)
Gui.SS_Form1.cmd_txt1_EndCust.Caption("^")
Gui.SS_Form1.cmd_txt1_EndCust.size(330,330)
Gui.SS_Form1.cmd_txt1_EndCust.position(4335,1440)
Gui.SS_Form1.cmd_txt1_EndCust.event(Click,cmd_txt1_endcust_click)
Gui.SS_Form1.cmd_txt1_EndCust.tabstop(True)
Gui.SS_Form1.cmd_txt1_EndCust.tabindex(7)
Gui.SS_Form1.chk1_AllCust.create(checkbox)
Gui.SS_Form1.chk1_AllCust.Caption("All Customers")
Gui.SS_Form1.chk1_AllCust.size(1800,300)
Gui.SS_Form1.chk1_AllCust.position(105,1770)
Gui.SS_Form1.chk1_AllCust.setinternationalid(19200)
Gui.SS_Form1.chk1_AllCust.tabstop(True)
Gui.SS_Form1.chk1_AllCust.tabindex(9)
Gui.SS_Form1.chk1_AllCust.Event(Click,chk1_allCustl_click)
Gui.SS_Form1.lvw1_Cust.create(listview)
Gui.SS_Form1.lvw1_Cust.view(3)
Gui.SS_Form1.lvw1_Cust.size(5805,1995)
Gui.SS_Form1.lvw1_Cust.position(105,2325)
Gui.SS_Form1.lvw1_Cust.addlistviewcolumn(variable.Translation.61000,2705,0)
Gui.SS_Form1.lvw1_Cust.addlistviewcolumn(variable.Translation.212900,2705,0)
Gui.SS_Form1.cmd_lvw1_CustAdd.create(button)
Gui.SS_Form1.cmd_lvw1_CustAdd.Caption("Add")
Gui.SS_Form1.cmd_lvw1_CustAdd.size(1005,330)
Gui.SS_Form1.cmd_lvw1_CustAdd.position(4815,1440)
Gui.SS_Form1.cmd_lvw1_CustAdd.setinternationalid(7600)
Gui.SS_Form1.cmd_lvw1_CustAdd.event(Click,cmd_lvw1_custadd_click)
Gui.SS_Form1.cmd_lvw1_CustAdd.tabstop(True)
Gui.SS_Form1.cmd_lvw1_CustAdd.tabindex(8)
Gui.SS_Form1.cmd_lvw1_CustDelete.create(button)
Gui.SS_Form1.cmd_lvw1_CustDelete.Caption("Delete")
Gui.SS_Form1.cmd_lvw1_CustDelete.size(1005,330)
Gui.SS_Form1.cmd_lvw1_CustDelete.position(105,4410)
Gui.SS_Form1.cmd_lvw1_CustDelete.setinternationalid(171500)
Gui.SS_Form1.cmd_lvw1_CustDelete.event(Click,cmd_lvw1_custdelete_click)
Gui.SS_Form1.cmd_lvw1_CustDelete.tabstop(True)
Gui.SS_Form1.cmd_lvw1_CustDelete.tabindex(10)
Gui.SS_Form1.cmd_lvw1_CustClear.create(button)
Gui.SS_Form1.cmd_lvw1_CustClear.Caption("Clear")
Gui.SS_Form1.cmd_lvw1_CustClear.size(1005,330)
Gui.SS_Form1.cmd_lvw1_CustClear.position(1185,4410)
Gui.SS_Form1.cmd_lvw1_CustClear.setinternationalid(106700)
Gui.SS_Form1.cmd_lvw1_CustClear.event(Click,cmd_lvw1_custclear_click)
Gui.SS_Form1.cmd_lvw1_CustClear.tabstop(True)
Gui.SS_Form1.cmd_lvw1_CustClear.tabindex(11)
Gui.SS_Form1.chk1_InclProg.create(checkbox)
Gui.SS_Form1.chk1_InclProg.Caption("Include Progress Bill Lines")
Gui.SS_Form1.chk1_InclProg.size(3600,300)
Gui.SS_Form1.chk1_InclProg.position(105,5205)
Gui.SS_Form1.chk1_InclProg.setinternationalid(291501)
Gui.SS_Form1.chk1_InclProg.tabstop(True)
Gui.SS_Form1.chk1_InclProg.tabindex(12)
Gui.SS_Form1.chk1_InclProg.Event(Click,chk1_inclprog_click)
Gui.SS_Form1.chk1_InclFreight.create(checkbox)
Gui.SS_Form1.chk1_InclFreight.Caption("Include Freight Charges")
Gui.SS_Form1.chk1_InclFreight.size(3600,300)
Gui.SS_Form1.chk1_InclFreight.position(105,4845)
Gui.SS_Form1.chk1_InclFreight.setinternationalid(291402)
Gui.SS_Form1.chk1_InclFreight.tabstop(True)
Gui.SS_Form1.chk1_InclFreight.tabindex(13)
Gui.SS_Form1.chk1_InclFreight.Value(1)
Gui.SS_Form1.chk1_InclExclusions.create(checkbox)
Gui.SS_Form1.chk1_InclExclusions.Caption("Use Exclusion Accounts to Exclude Records")
Gui.SS_Form1.chk1_InclExclusions.size(3600,300)
Gui.SS_Form1.chk1_InclExclusions.position(105,5595)
Gui.SS_Form1.chk1_InclExclusions.setinternationalid(3305)
Gui.SS_Form1.chk1_InclExclusions.tabstop(True)
Gui.SS_Form1.chk1_InclExclusions.tabindex(14)
Gui.SS_Form1.chkParentCost.create(checkbox)
Gui.SS_Form1.chkParentCost.Caption("Ignore Parent Cost")
Gui.SS_Form1.chkParentCost.size(1800,300)
Gui.SS_Form1.chkParentCost.position(105,5985)
Gui.SS_Form1.chkParentCost.setinternationalid(72106)
Gui.SS_Form1.chkParentCost.tabstop(True)
Gui.SS_Form1.chkParentCost.tabindex(15)
Gui.SS_Form1.cmd1_Print.create(button)
Gui.SS_Form1.cmd1_Print.Caption("Print")
Gui.SS_Form1.cmd1_Print.size(1005,360)
Gui.SS_Form1.cmd1_Print.position(105,6480)
Gui.SS_Form1.cmd1_Print.setinternationalid(452800)
Gui.SS_Form1.cmd1_Print.event(Click,cmd1_print_click)
Gui.SS_Form1.cmd1_Print.tabstop(True)
Gui.SS_Form1.cmd1_Print.tabindex(16)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Variable.Global.bopt.Declare(Boolean,False)
Variable.Global.CDec.Declare(String)
Variable.Global.QDec.Declare(String)
Variable.Global.iKey.Declare(Long,0)
Variable.Global.iLogid.declare(Long,0)
Variable.Global.iBIRunID.declare(Long,0)
Variable.Global.bMultiSelection.Declare(Boolean,False)
Variable.Global.sProps.Declare(String)

Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.SetErrorHandler("Main_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iCon.Declare(Long) 

 'Coded by: Jackie Theriot
'Project Start Date: 11/12/2013
'Sales analysis by Cust and part number
'Crystal report:  1304, SA_PartNo_1304.rpt

'Modified by: Anchal Gupta
'Date: 07/27/2017
'Sales Analysis by Customer and Part Number
'Crystal Report: SA_BY_CUST_1304.rpt (Report ID: 1304)
F.ODBC.connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.puser,V.Ambient.PPass)
F.Global.Object.CreateDB("GlobalDB",V.Caller.CompanyCode,V.Ambient.DBServerName,True,V.Local.iCon)
gui.SS_Form1..applytranslation
'gui.SS_Form1.chkParentCost_InclProg.value("0")
'gui.SS_Form1.chkParentCost_InclExclusions.value("0")
'gui.SS_Form1.chkParentCost_InclFreight.value("0")
Gui.SS_Form1..show
'End ==========================================================

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Main_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.Main.End

Program.Sub.cmd1_print_click.Start
F.Intrinsic.Control.SetErrorHandler("cmd1_print_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iCon.Declare(Long)

'Start ========================================================
'Print Button

F.Intrinsic.UI.InvokeWaitDialog("Gather Report Data.....................")
Gui.SS_Form1..Visible(False)

'==============
'These are the options that set how many decimals will be used for the Cost and Quantity fields
F.global.general.readoption("400713",1,"0",0,V.Global.CDec)
F.global.general.readoption("400714",1,"0",0,V.Global.QDec)
'==============

'==============
'This is setting the RunId and identifying the report Id
F.Global.BI.GetRunID(V.Global.iBIRunID)
F.Intrinsic.Control.If(V.Ambient.IsInIDE,=,True)
        F.Global.BI.StartLogging(V.global.iBIRunID,1304,0,"",V.global.iLogID)
F.Intrinsic.Control.Else
        F.Global.BI.StartLogging(V.global.iBIRunID,-1,-1,"",V.global.iLogID)
F.Intrinsic.Control.EndIf
'===============

'Setting the properties
V.Global.sProps.Set("IH.Shipment-Delivery-CustomerShipTo-CustomerShipToNumber*!*")
V.Global.sProps.Append("IH.Shipment-SalesOrderShipTo-Customer-Sales-Salesperson-SalespersonCode*!*IH.Shipment-SalesOrderShipTo-Shipping-Address-Name*!*IH.Shipment-SalesOrder-Customer-CustomerNumber*!*")
V.Global.sProps.Append("IL.Invoice-Shipment-SalesOrderShipTo-Accounting-AreaCodeFO*!*IL.Invoice-Shipment-SalesOrderShipTo-Accounting-Branch-BranchCodeFO*!*")
V.Global.sProps.Append("IL.ShipmentLine-SalesOrderLine-Part-LocationCode*!*IL.ShipmentLine-Quantity-Shipped*!*IL.ShipmentLine-SalesOrderLine-Part-PhysicalProperty-Weight*!*")
V.Global.sProps.Append("IL.Inventory-Cost-MonetaryValue-Company-PerPound*!*IL.ShipmentLine-SalesOrderLine-Sales-UnitOfMeasure-UnitOfMeasureCode*!*")
V.Global.sProps.Append("IL.ShipmentLine-SalesOrderLine-Part-Information-UnitOfMeasure-UnitOfMeasureCode*!*IL.ShipmentLine-SalesOrderLine-Inventory-UsesCostOfGoodsSold*!*")
V.Global.sProps.Append("IL.ShipmentLine-SalesOrderLine-Information-Type*!*IL.ShipmentLine-SalesOrderLine-Accounting-Account-AccountNumber*!*IL.ShipmentLine-SalesOrderLine-Part-PartNumber*!*")
V.Global.sProps.Append("IL.ShipmentLine-SalesOrderLine-Part-PartNumberRevision*!*IL.ShipmentLine-SalesOrderLine-Part-Description-Primary*!*IL.ShipmentLine-SalesOrderLine-Part-Cost-MonetaryValue-Company-Unit*!*")
V.Global.sProps.Append("IL.ShipmentLine-SalesOrderLine-Part-Information-ProductLine-ProductLineCode*!*IL.ShipmentLine-SalesOrderLine-Pricing-MonetaryValue-Company-Extended*!*")
V.Global.sProps.Append("IL.SalesOrderLineNumber*!*IL.ShipmentSequence*!*IL.SalesOrderNumber*!*IL.InvoiceNumber*!*IL.Information-InvoiceDate")

F.Intrinsic.Control.If(V.Screen.SS_Form1!chk1_AllDates.Value,=,1,"AND",V.Screen.SS_Form1!chk1_AllCust.Value,=,1)
	'Loads all dates/all customers: 
	F.Intrinsic.Control.CallSub(Print_AllDates)
F.Intrinsic.Control.ElseIf(V.Screen.SS_Form1!chk1_AllDates.Value,=,0,"AND",V.Screen.SS_Form1!chk1_AllCust.Value,=,1)
	'Loads date range/all customers: 
	F.Intrinsic.Control.CallSub(Print_DateRange)
F.Intrinsic.Control.Else
	'Getting the customer range:
	F.Intrinsic.Control.CallSub(Listview_Loop)
F.Intrinsic.Control.EndIf

Function.Intrinsic.Control.If(v.DataTable.dtHeader.Exists,=,True,"AND",v.DataTable.dtLines.Exists,=,True) 
	
		F.Data.Linq.Join("LeftJoin","DataTable","dtHeader*!*IH","DataTable","dtLines*!*IL","IH.InvoiceNumber = IL.InvoiceNumber AND IH.SalesOrderNumber = IL.SalesOrderNumber AND IH.ShipmentSequence = IL.ShipmentSequence",V.Global.sProps,"","","","dtIvcCust",True)
	
Function.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.DataTable.dtIvcCust.Exists,=,True)
	F.Intrinsic.Control.If(V.DataTable.dtIvcCust.RowCount,>,0)
		'Get company options. No longer needed.
		'F.Intrinsic.Control.CallSub(Load_Company_Options)
		'Add expression columns.
		F.Intrinsic.Control.CallSub(Add_Expression_Columns)
		'Filter DataTable
		F.Intrinsic.Control.CallSub(Filter_DataTable)
		'Load to Z Table
		F.Intrinsic.Control.CallSub(load_to_table)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.UI.CloseWaitDialog
'===============
'This is calling the Crystal Report
F.Global.BI.StopLogging(V.Global.iLogid)
F.Intrinsic.Control.CallSub(Callbi)
'===============

'End ===============

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmd1_print_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.cmd1_print_click.End

Program.Sub.Print_AllDates.Start
F.Intrinsic.Control.SetErrorHandler("Print_AllDates_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iRet.Declare(Long)
V.Local.iCon.Declare(Long)
v.Local.dStart.Declare(Date) 
v.Local.dEnd.Declare(Date)
v.Local.sRet.Declare(String)
v.Local.dStartRange.Declare(Date) 
v.Local.dEndRange.Declare(Date) 

'f.ODBC.Connection!conx.executeandreturn("Select Min(Date_Invoice) as Beg_Date, Max(Date_Invoice) as End_Date from ORDER_HIST_HEAD where DATE_INVOICE>='1900-01-01'",v.Local.sRet)
'get the earliest start date possible
f.ODBC.Connection!conx.executeandreturn("Select Top 1 Date_INVOICE from ORDER_HIST_HEAD where DATE_INVOICE>='1900-01-01' ORder By Date_Invoice",v.Local.sRet)
f.Intrinsic.Control.If(v.Ambient.executeandreturnEOF,=,False)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	v.Local.dStart.Set(v.Local.sret(0))	
Function.Intrinsic.Control.EndIf
'Get ENding Date Range
f.ODBC.Connection!conx.executeandreturn("Select Top 1 Date_INVOICE from ORDER_HIST_HEAD ORder By Date_Invoice DESC",v.Local.sRet)
f.Intrinsic.Control.If(v.Ambient.executeandreturnEOF,=,False)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	v.Local.dEnd.Set(v.Local.sret(0))	
Function.Intrinsic.Control.EndIf
F.Intrinsic.Debug.SetLA("Start Date Min: ",v.Local.dStart,"   End Date Max: ",v.Local.dEnd)
v.Local.dStartRange.Set(v.Local.dStart) 
F.Intrinsic.Date.EndOfMonth(v.Local.dStartRange,v.Local.dEndRange) 
Function.Intrinsic.Control.DoUntil(v.Local.dStartRange,>,v.Local.dEnd)
	Function.Intrinsic.Control.If(v.Local.dEnd,<,v.Local.dEndRange) 
		v.Local.dEndRange.Set(v.Local.dEnd)		
	Function.Intrinsic.Control.EndIf	
	F.Intrinsic.Debug.SetLA("Loading for Start Date: ", v.Local.dStartRange, "    End Range: ", v.Local.dEndRange)
	'InvoiceHeader
	Function.Intrinsic.Control.If(v.DataTable.dtHeader.Exists)
		F.Intrinsic.Control.If(V.DataTable.dtHeader.RowCount--,>=,0)
			F.Global.Object.LoadDataTable("dtTemp","oInv","Sales.Invoicing.Invoices","GlobalDB",v.Local.iCon,262,True,,-1,v.Local.dStartRange,"",v.Local.dEndRange,"z")
			Function.Intrinsic.Control.If(v.DataTable.dtTemp.Exists,=,True,"AND",v.DataTable.dtTemp.RowCount--,>=,0)
				F.Data.DataTable.Merge("dtTemp","dtHeader",True,4)
			Function.Intrinsic.Control.EndIf
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.Else
			F.Data.DataTable.Close("dtHeader")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.Control.If(V.DataTable.dtHeader.Exists,=,False)
		F.Global.Object.LoadDataTable("dtHeader","oInv","Sales.Invoicing.Invoices","GlobalDB",v.Local.iCon,262,True,,-1,v.Local.dStartRange,"",v.Local.dEndRange,"z")			
	Function.Intrinsic.Control.EndIf	
	
	'Invoice Lines, but we want to make sure that we only load this once. since we only call this once we should be fine
	Function.Intrinsic.Control.If(v.DataTable.dtLines.Exists)
		F.Intrinsic.Control.If(V.DataTable.dtLines.RowCount--,>=,0)
			F.Global.Object.LoadDataTable("dtTemp","oInvL","Sales.Invoicing.InvoiceLines","GlobalDB",v.Local.iCon,389,True,,-1,v.Local.dStartRange,v.Local.dEndRange)
			Function.Intrinsic.Control.If(v.DataTable.dtTemp.Exists,=,True,"AND",v.DataTable.dtTemp.RowCount--,>=,0)
				F.Data.DataTable.Merge("dtTemp","dtLines",True,4)
			Function.Intrinsic.Control.EndIf
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.Else
			F.Data.DataTable.Close("dtLines")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.Control.If(V.DataTable.dtLines.Exists,=,False)
		F.Global.Object.LoadDataTable("dtLines","oInvL","Sales.Invoicing.InvoiceLines","GlobalDB",v.Local.iCon,389,True,,-1,v.Local.dStartRange,v.Local.dEndRange)
	Function.Intrinsic.Control.EndIf		
	'go to beg of month since this is our first loop and we might not have started at the first. 
	F.Intrinsic.Date.BeginningOfMonth(v.Local.dStartRange,v.Local.dStartRange)
	F.Intrinsic.Date.DateAdd("M",1,v.Local.dStartRange,v.Local.dStartRange) 
	F.Intrinsic.Date.EndOfMonth(v.Local.dStartRange,v.Local.dEndRange)	
Function.Intrinsic.Control.Loop
F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Label("Print_AllDates_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	'If no data found in data table, exitsub.
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,=,23300)
		F.Global.Object.CloseConnection("GlobalDB",V.Local.iCon)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	Function.Intrinsic.Control.CallSub(ss_Form1_Unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Print_AllDates.End

Program.Sub.Print_DateRange.Start
F.Intrinsic.Control.SetErrorHandler("DateRange_Err")
F.Intrinsic.Control.ClearErrors
V.Local.sError.Declare(String)
V.Local.iCon.Declare(Long)
V.Local.iRet.Declare(Long)
v.Local.dStart.Declare(Date) 
v.Local.dEnd.Declare(Date) 
v.Local.dStart.Set(v.Screen.SS_Form1!dtp1_Begdate.value) 
v.Local.dEnd.Set(v.Screen.SS_Form1!dtp1_Enddate.value) 
v.Local.dStartRange.Declare(Date) 
v.Local.dEndRange.Declare(Date)
v.Local.dStartRange.Set(v.Local.dStart)
F.Intrinsic.Date.EndOfMonth(v.Local.dStartRange,v.Local.dEndRange) 
Function.Intrinsic.Control.DoUntil(v.Local.dStartRange,>,v.Local.dEnd) 
	Function.Intrinsic.Control.If(v.Local.dEnd,<,v.Local.dEndRange) 
		v.Local.dEndRange.Set(v.Local.dEnd)		
	Function.Intrinsic.Control.EndIf	
	'load Invoice Header
	F.Intrinsic.Debug.SetLA("Loading for Start Date: ", v.Local.dStartRange, "    End Range: ", v.Local.dEndRange)
	Function.Intrinsic.Control.If(v.DataTable.dtHeader.Exists)
		F.Intrinsic.Control.If(V.DataTable.dtHeader.RowCount--,>=,0)
			F.Global.Object.LoadDataTable("dtTemp","oInv","Sales.Invoicing.Invoices","GlobalDB",v.Local.iCon,262,True,,-1,v.Local.dStartRange,"",v.Local.dEndRange,"z")
			Function.Intrinsic.Control.If(v.DataTable.dtTemp.Exists,=,True,"AND",v.DataTable.dtTemp.RowCount--,>=,0)
				F.Data.DataTable.Merge("dtTemp","dtHeader",True,4)
			Function.Intrinsic.Control.EndIf
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.Else
			F.Data.DataTable.Close("dtHeader")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.Control.If(V.DataTable.dtHeader.Exists,=,False)
		F.Global.Object.LoadDataTable("dtHeader","oInv","Sales.Invoicing.Invoices","GlobalDB",v.Local.iCon,262,True,,-1,v.Local.dStartRange,"",v.Local.dEndRange,"z")			
	Function.Intrinsic.Control.EndIf		
	'Invoice Lines, but we want to make sure that we only load this once should since we only call this once.  
	Function.Intrinsic.Control.If(v.DataTable.dtLines.Exists)
		F.Intrinsic.Control.If(V.DataTable.dtLines.RowCount--,>=,0)
			F.Global.Object.LoadDataTable("dtTemp","oInvL","Sales.Invoicing.InvoiceLines","GlobalDB",v.Local.iCon,389,True,,-1,v.Local.dStartRange,v.Local.dEndRange)
			Function.Intrinsic.Control.If(v.DataTable.dtTemp.Exists,=,True,"AND",v.DataTable.dtTemp.RowCount--,>=,0)
				F.Data.DataTable.Merge("dtTemp","dtLines",True,4)
			Function.Intrinsic.Control.EndIf
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.Else
			F.Data.DataTable.Close("dtLines")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.Control.If(V.DataTable.dtLines.Exists,=,False)
		F.Global.Object.LoadDataTable("dtLines","oInvL","Sales.Invoicing.InvoiceLines","GlobalDB",v.Local.iCon,389,True,,-1,v.Local.dStartRange,v.Local.dEndRange)
	Function.Intrinsic.Control.EndIf
	'go to beg of month since this is our first loop and we might not have started at the first. 
	F.Intrinsic.Date.BeginningOfMonth(v.Local.dStartRange,v.Local.dStartRange)
	F.Intrinsic.Date.DateAdd("M",1,v.Local.dStartRange,v.Local.dStartRange) 
	F.Intrinsic.Date.EndOfMonth(v.Local.dStartRange,v.Local.dEndRange)	
Function.Intrinsic.Control.Loop
F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Label("DateRange_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	'If no data found in data table, exitsub.
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,=,23300)
		F.Global.Object.CloseConnection("GlobalDB",V.Local.iCon)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(ss_form1_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Print_DateRange.End

Program.Sub.Print_DateCust_Range.Start
F.Intrinsic.Control.SetErrorHandler("DateCust_Range_Err")
F.Intrinsic.Control.ClearErrors
V.Local.sError.Declare(String)
V.Local.iCon.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.dStart.Declare(Date)
V.Local.dEnd.Declare(Date)
v.Local.dStartRange.Declare(Date) 
v.Local.dEndRange.Declare(Date)
v.Local.dStart.Set(v.Screen.SS_Form1!dtp1_Begdate.value) 
v.Local.dEnd.Set(v.Screen.SS_Form1!dtp1_Enddate.value)
v.Local.dStartRange.Set(v.Local.dStart) 
F.Intrinsic.Date.EndOfMonth(v.Local.dStartRange,v.Local.dEndRange) 
F.Intrinsic.Debug.SetLA("Start Date Min: ",v.Local.dStart,"   End Date Max: ",v.Local.dEnd,"   Customer Range: ",v.Args.BegCust," through ",v.Args.EndCust)
Function.Intrinsic.Control.DoUntil(v.Local.dStartRange,>,v.Local.dEnd) 
	Function.Intrinsic.Control.If(v.Local.dEnd,<,v.Local.dEndRange) 
		v.Local.dEndRange.Set(v.Local.dEnd)		
	Function.Intrinsic.Control.EndIf	
	F.Intrinsic.Debug.SetLA("Loading for Start Date: ", v.Local.dStartRange, "    End Range: ", v.Local.dEndRange)
	'Invoice Header
	Function.Intrinsic.Control.If(v.DataTable.dtHeader.Exists)
		F.Intrinsic.Control.If(V.DataTable.dtHeader.RowCount--,>=,0)
			F.Global.Object.LoadDataTable("dtTemp","oInv","Sales.Invoicing.Invoices","GlobalDB",v.Local.iCon,262,True,,-1,v.Local.dStartRange,v.Args.BegCust,v.Local.dEndRange,v.Args.EndCust)
			Function.Intrinsic.Control.If(v.DataTable.dtTemp.Exists,=,True,"AND",v.DataTable.dtTemp.RowCount--,>=,0)
				F.Data.DataTable.Merge("dtTemp","dtHeader",True,4)
			Function.Intrinsic.Control.EndIf
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.Else
			F.Data.DataTable.Close("dtHeader")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.Control.If(V.DataTable.dtHeader.Exists,=,False)
		F.Global.Object.LoadDataTable("dtHeader","oInv","Sales.Invoicing.Invoices","GlobalDB",v.Local.iCon,262,True,,-1,v.Local.dStartRange,v.Args.BegCust,v.Local.dEndRange,v.args.EndCust)			
	Function.Intrinsic.Control.EndIf	
	
	'Invoice Lines, but we want to make sure that we only load this once.
	Function.Intrinsic.Control.If(v.Args.counter,=,0)
		Function.Intrinsic.Control.If(v.DataTable.dtLines.Exists)
			F.Intrinsic.Control.If(V.DataTable.dtLines.RowCount--,>=,0)
				F.Global.Object.LoadDataTable("dtTemp","oInvL","Sales.Invoicing.InvoiceLines","GlobalDB",v.Local.iCon,389,True,,-1,v.Local.dStartRange,v.Local.dEndRange)
				Function.Intrinsic.Control.If(v.DataTable.dtTemp.Exists,=,True,"AND",v.DataTable.dtTemp.RowCount--,>=,0)
					F.Data.DataTable.Merge("dtTemp","dtLines",True,4)
				Function.Intrinsic.Control.EndIf
				F.Data.DataTable.Close("dtTemp")
			F.Intrinsic.Control.Else
				F.Data.DataTable.Close("dtLines")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		Function.Intrinsic.Control.If(V.DataTable.dtLines.Exists,=,False)
			F.Global.Object.LoadDataTable("dtLines","oInvL","Sales.Invoicing.InvoiceLines","GlobalDB",v.Local.iCon,389,True,,-1,v.Local.dStartRange,v.Local.dEndRange)
		Function.Intrinsic.Control.EndIf			
	Function.Intrinsic.Control.EndIf
	'go to beg of month since this is our first loop and we might not have started at the first. 
	F.Intrinsic.Date.BeginningOfMonth(v.Local.dStartRange,v.Local.dStartRange)
	F.Intrinsic.Date.DateAdd("M",1,v.Local.dStartRange,v.Local.dStartRange) 
	F.Intrinsic.Date.EndOfMonth(v.Local.dStartRange,v.Local.dEndRange)	
Function.Intrinsic.Control.Loop
F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Label("DateCust_Range_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	'If no data found in data table, exitsub.
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,=,23300)
		F.Global.Object.CloseConnection("GlobalDB",V.Local.iCon)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.Print_DateCust_Range.End

Program.Sub.Print_CustRange.Start
F.Intrinsic.Control.SetErrorHandler("CustRange_Err")
F.Intrinsic.Control.ClearErrors
V.Local.sError.Declare(String)
V.Local.iCon.Declare(Long)
V.Local.iRet.Declare(Long)
v.Local.sRet.Declare(String)
v.Local.dStart.Declare(Date) 
v.Local.dEnd.Declare(Date)
v.Local.dStartRange.Declare(Date) 
v.Local.dEndRange.Declare(Date)
v.Local.sSQL.Declare(String)
'since they chose all dates we just want to get the lowest possiblea and highest possible from tables
'get the earliest start date possible
'basedon customer range to "limit" the amount of dates we pull
F.Intrinsic.String.Build("Select Top 1 Date_INVOICE from ORDER_HIST_HEAD where DATE_INVOICE>='1900-01-01' And Customer Between '{0}' And '{1}' ORder By Date_Invoice",v.Args.BegCust,v.Args.EndCust,v.Local.sSQL) 
f.ODBC.Connection!conx.executeandreturn(v.Local.sSQL,v.Local.sRet)
f.Intrinsic.Control.If(v.Ambient.executeandreturnEOF,=,False)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	v.Local.dStart.Set(v.Local.sret(0))	
	'set it to the first of the month if not on the first. easier in the loops.
	F.Intrinsic.Date.BeginningOfMonth(v.Local.dStart,v.Local.dStart)
Function.Intrinsic.Control.EndIf
'Get ENding Date Range
F.Intrinsic.String.Build("Select Top 1 Date_INVOICE from ORDER_HIST_HEAD where Customer Between '{0}' And '{1}' ORder By Date_Invoice DESC",v.Args.BegCust,v.Args.EndCust,v.Local.sSQL)
f.ODBC.Connection!conx.executeandreturn(v.Local.sSQL,v.Local.sRet)
f.Intrinsic.Control.If(v.Ambient.executeandreturnEOF,=,False)
	f.Intrinsic.String.Split(v.Local.sRet,"*!*",v.Local.sRet)
	v.Local.dEnd.Set(v.Local.sret(0))	
Function.Intrinsic.Control.EndIf
F.Intrinsic.Debug.SetLA("Start Date Min: ",v.Local.dStart,"   End Date Max: ",v.Local.dEnd,"   Customer Range: ",v.Args.BegCust," through ",v.Args.EndCust)
v.Local.dStartRange.Set(v.Local.dStart)
F.Intrinsic.Date.EndOfMonth(v.Local.dStartRange,v.Local.dEndRange) 
'Loop month by month until we've reached the end.
Function.Intrinsic.Control.DoUntil(v.Local.dStartRange,>,v.Local.dEnd) 
	Function.Intrinsic.Control.If(v.Local.dEnd,<,v.Local.dEndRange) 
		v.Local.dEndRange.Set(v.Local.dEnd)		
	Function.Intrinsic.Control.EndIf	
	F.Intrinsic.Debug.SetLA("Loading for Start Date: ", v.Local.dStartRange, "    End Range: ", v.Local.dEndRange)
	'Invoice Header
	Function.Intrinsic.Control.If(v.DataTable.dtHeader.Exists)
		F.Intrinsic.Control.If(V.DataTable.dtHeader.RowCount--,>=,0)
			F.Global.Object.LoadDataTable("dtTemp","oInv","Sales.Invoicing.Invoices","GlobalDB",v.Local.iCon,262,True,,-1,v.Local.dStartRange,v.Args.BegCust,v.Local.dEndRange,v.Args.EndCust)
			Function.Intrinsic.Control.If(v.DataTable.dtTemp.Exists,=,True,"AND",v.DataTable.dtTemp.RowCount--,>=,0)
				F.Data.DataTable.Merge("dtTemp","dtHeader",True,4)
			Function.Intrinsic.Control.EndIf
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.Else
			F.Data.DataTable.Close("dtHeader")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.Control.If(V.DataTable.dtHeader.Exists,=,False)
		F.Global.Object.LoadDataTable("dtHeader","oInv","Sales.Invoicing.Invoices","GlobalDB",v.Local.iCon,262,True,,-1,v.Local.dStartRange,v.Args.BegCust,v.Local.dEndRange,v.args.EndCust)			
	Function.Intrinsic.Control.EndIf		
	'Invoice Lines, but we want to make sure that we only load this once. 
	Function.Intrinsic.Control.If(v.Args.Counter,=,0) 
		Function.Intrinsic.Control.If(v.DataTable.dtLines.Exists)
			F.Intrinsic.Control.If(V.DataTable.dtLines.RowCount--,>=,0)
				F.Global.Object.LoadDataTable("dtTemp","oInvL","Sales.Invoicing.InvoiceLines","GlobalDB",v.Local.iCon,389,True,,-1,v.Local.dStartRange,v.Local.dEndRange)
				Function.Intrinsic.Control.If(v.DataTable.dtTemp.Exists,=,True,"AND",v.DataTable.dtTemp.RowCount--,>=,0)
					F.Data.DataTable.Merge("dtTemp","dtLines",True,4)
				Function.Intrinsic.Control.EndIf
				F.Data.DataTable.Close("dtTemp")
			F.Intrinsic.Control.Else
				F.Data.DataTable.Close("dtLines")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		Function.Intrinsic.Control.If(V.DataTable.dtLines.Exists,=,False)
			F.Global.Object.LoadDataTable("dtLines","oInvL","Sales.Invoicing.InvoiceLines","GlobalDB",v.Local.iCon,389,True,,-1,v.Local.dStartRange,v.Local.dEndRange)
		Function.Intrinsic.Control.EndIf		
	Function.Intrinsic.Control.EndIf	
	'go to beg of month since this is our first loop and we might not have started at the first. 
	F.Intrinsic.Date.BeginningOfMonth(v.Local.dStartRange,v.Local.dStartRange)
	F.Intrinsic.Date.DateAdd("M",1,v.Local.dStartRange,v.Local.dStartRange) 
	F.Intrinsic.Date.EndOfMonth(v.Local.dStartRange,v.Local.dEndRange)	
Function.Intrinsic.Control.Loop
F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Label("CustRange_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	'If no data found in data table, exitsub.
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,=,23300)
		F.Global.Object.CloseConnection("GlobalDB",V.Local.iCon)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(ss_form1_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Print_CustRange.End

Program.Sub.Load_Company_Options.Start
'Obsolete Subroutine. No Longer used.

V.Local.iCon.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.sProps.Declare(String)

V.Local.sProps.Set("OptionNumber::OptionSequence::")
V.Local.sProps.Append("Information.Boolean::Information.AsciiFlag::Information.Text1::Information.Text2::Information.Numeric::Information.Long")

'TODO : Waiting on mode for this
'Use Weight to Calculate Extended Price' is active 
F.Global.object.OpenConnection("GlobalDB",V.Caller.CompanyCode,V.Ambient.DBServerName,V.Local.iCon)
Function.Intrinsic.Control.Try
	F.Global.Object.LoadDataTable("dtCompOptions","oCompOptions","System.CompanyOptions","GlobalDB",V.Local.iCon,4,V.Local.sProps,TRUE,,90000,0,90000,0,V.Local.iRet)
Function.Intrinsic.Control.EndTry
F.Global.Object.CloseConnection("GlobalDB",V.Local.iCon)

Program.Sub.Load_Company_Options.End

Program.Sub.Load_To_Table.Start
'Load to z table.
V.Local.sFm.Declare(String)
v.Local.bool.Declare(Boolean)
V.Local.bUseRev.Declare(Boolean)
V.Local.Xp.Declare(String)

'Add runid column
F.Data.DataTable.AddColumn("dtIvcCusts","BIRUNID","Long",V.Global.iBIRunID)
'piece part rev back together again
'check company option
F.Global.General.ReadOption("070008",0,False,"0000",V.Local.bUseRev)
	F.Intrinsic.Control.If(V.Local.bUseRev, =, True)
		F.Data.DataTable.AddExpressionColumn("dtIvcCusts", "PART", "String", "Substring([ShipmentLine-SalesOrderLine-Part-PartNumber] + '                 ',1,17) + Substring([ShipmentLine-SalesOrderLine-Part-PartNumberRevision] + '   ',1,3)")
	F.Intrinsic.Control.Else
		F.Data.DataTable.AddExpressionColumn("dtIvcCusts", "PART", "String", "Substring([ShipmentLine-SalesOrderLine-Part-PartNumber] + '                 ',1,20)")
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.AddColumn("dtIvcCusts","FREIGHT",Float)
	F.Data.DataTable.AddColumn("dtIvcCusts","ALLOWANCE",Float)
	F.Data.DataTable.AddColumn("dtIvcCusts","COMMISSIONS",Float)
	F.Data.DataTable.AddColumn("dtIvcCusts","Total-Costs",Float)
	V.Local.Xp.Set("IIF([Total-Costs] = 0,0,[Profit-Dollar-Amount]/[Total-Costs]*100)")
	F.Data.DataTable.AddExpressionColumn("dtIvcCusts","Gross-Percentage",Float,V.Local.Xp)
'Map to SQL Table

V.Local.sFm.Set("BIRUNID@!@BIRUNID")
V.Local.sFm.Append("*!*Convert_InvoiceNumber@!@INVC_NO")
V.Local.sFm.Append("*!*Convert_SalesOrderNumber@!@ORDER_NUM")
V.Local.sFm.Append("*!*Convert_ShipmentSequence@!@ORDER_SEQ")
V.Local.sFm.Append("*!*PART@!@PART")
V.Local.sFm.Append("*!*ShipmentLine-SalesOrderLine-Part-LocationCode@!@PART_LOCN")
V.Local.sFm.Append("*!*ShipmentLine-SalesOrderLine-Part-Description-Primary@!@DESCR")
V.Local.sFm.Append("*!*ShipmentLine-SalesOrderLine-Part-Information-ProductLine-ProductLineCode@!@PROD_LINE")
F.Intrinsic.String.IsInString(V.DataTable.dtIvcCusts.FieldNames,"Rpt-Qty-Shipped",True,V.Local.bool)
Function.Intrinsic.Control.If(v.Local.bool,=,True)
	V.Local.sFm.Append("*!*Rpt-Qty-Shipped@!@QTY_SHIPPED")
Function.Intrinsic.Control.Else
	V.Local.sFm.Append("*!*ShipmentLine-Quantity-Shipped@!@QTY_SHIPPED")
Function.Intrinsic.Control.EndIf
V.Local.sFm.Append("*!*Information-InvoiceDate@!@INVC_DATE")
V.Local.sFm.Append("*!*Invoice-Shipment-SalesOrderShipTo-Accounting-Branch-BranchCodeFO@!@BRANCH")
V.Local.sFm.Append("*!*Progress-Bill-Flag@!@PROGRESS_FLAG")
V.Local.sFm.Append("*!*Freight-Line-Flag@!@FREIGHT_FLAG")
V.Local.sFm.Append("*!*Excl-Acct-Flag@!@EXCL_ACCT_FLAG")
V.Local.sFm.Append("*!*ShipmentLine-SalesOrderLine-Pricing-MonetaryValue-Company-Extended@!@SALES")
V.Local.sFm.Append("*!*Extended-Total-Costs@!@Cost")
'V.Local.sFm.Append("*!*Total-Costs@!@Cost")
V.Local.sFm.Append("*!*Shipment-SalesOrder-Customer-CustomerNumber@!@CUST")
V.Local.sFm.Append("*!*Shipment-SalesOrderShipTo-Customer-Sales-Salesperson-SalespersonCode@!@SALES_REP")
V.Local.sFm.Append("*!*Shipment-Delivery-CustomerShipTo-CustomerShipToNumber@!@SHIPTO_ID")
V.Local.sFm.Append("*!*Ship-Name@!@SHIP_NAME")
V.Local.sFm.Append("*!*Sales-Rep-Name@!@SALES_REP_NAME")
V.Local.sFm.Append("*!*Profit-Dollar-Amount@!@GROSS_PROFIT")
'V.Local.sFm.Append("*!*GrossProfit-Percentage@!@GROSS_PROFIT_PERCENT")
V.Local.sFm.Append("*!*Gross-Percentage@!@GROSS_PROFIT_PERCENT")
V.Local.sFm.Append("*!*FREIGHT@!@FREIGHT")
V.Local.sFm.Append("*!*ALLOWANCE@!@ALLOWANCE")
V.Local.sFm.Append("*!*COMMISSIONS@!@COMMISSIONS")

F.Intrinsic.Control.If(V.DataTable.dtIvcCusts.RowCount--,<>,-1)
	F.Intrinsic.Control.CallSub(Update_DT)
F.Intrinsic.Control.EndIf

'Save to db.
F.Data.DataTable.SaveToDB("dtIvcCusts","conx","GCG_6470_SA_BY_CUST","",128,V.Local.sFm)
F.ODBC.Connection!conx.Close

Program.Sub.Load_To_Table.End

Program.Sub.Add_Expression_Columns.Start
'Create expression columns
'Determine Qty Shipped
F.Intrinsic.Control.CallSub(Column_Qty_Shipped)
'Get Extended Total Costs
F.Intrinsic.Control.CallSub(Column_Extended_Total_Costs)
'Get Profit Dollar Amount
F.Intrinsic.Control.CallSub(Column_Profit_Dollar_Amt)
'Calculate Gross Profit Percentage
F.Intrinsic.Control.CallSub(Column_ProfitPercentage)
'Progress Bill Flag
F.Intrinsic.Control.CallSub(Column_Progress_Bill_Flag)
'Freight Flag
F.Intrinsic.Control.CallSub(Column_Freight_Flag)
'Exculsion Account Flag
F.Intrinsic.Control.CallSub(Column_Exclusion_Acct_Flag)
'Sales Rep Name
F.Intrinsic.Control.CallSub(Fill_Sales_Rep_Name)
'Ship Name
F.Intrinsic.Control.CallSub(Fill_Ship_Name)
'Convert Order num
F.Intrinsic.Control.CallSub(Convert_SalesOrderNumber)
'Convert Order Seq
F.Intrinsic.Control.CallSub(Convert_ShipmentSequence)
'Convert Invoice Num
F.Intrinsic.Control.CallSub(Convert_InvoiceNumber)

Program.Sub.Add_Expression_Columns.End

Program.Sub.Convert_SalesOrderNumber.Start
'Convert sales order number to string from int.
F.Data.DataTable.AddExpressionColumn("dtIvcCust","Convert_SalesOrderNumber","String","Trim(Convert([SalesOrderNumber],'System.String'))")

Program.Sub.Convert_SalesOrderNumber.End

Program.Sub.Convert_ShipmentSequence.Start
'Convert ship seq to string from int.
F.Data.DataTable.AddExpressionColumn("dtIvcCust","Convert_ShipmentSequence","String","Trim(Convert([ShipmentSequence],'System.String'))")

Program.Sub.Convert_ShipmentSequence.End

Program.Sub.Convert_InvoiceNumber.Start
'Convert invoice to string from int.
F.Data.DataTable.AddExpressionColumn("dtIvcCust","Convert_InvoiceNumber","String","Trim(Convert([InvoiceNumber],'System.String'))")

Program.Sub.Convert_InvoiceNumber.End

Program.Sub.Fill_Sales_Rep_Name.Start
'Using dictionary to fill sales rep names
F.Intrinsic.Control.SetErrorHandler("Fill_SalesRep_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iCon.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.sBeg.Declare(String)
V.Local.sEnd.Declare(String)
V.Local.sProps.Declare(String)
V.Local.bRet.Declare(Boolean)

'Get Sales person ID ranges.
'Creating temp column since we'll need to trim out white spaces. Causing issues when saving to db.
F.Data.DataTable.AddColumn("dtIvcCust","Temp-Sales-Rep-Name","String","")
F.Data.DataView.Create("dtIvcCust","v_sort")
F.Data.DataView.SetSort("dtIvcCust","v_sort","[Shipment-SalesOrderShipTo-Customer-Sales-Salesperson-SalespersonCode] ASC")
V.Local.sBeg.Set(V.DataView.dtIvcCust!v_sort(0).Shipment-SalesOrderShipTo-Customer-Sales-Salesperson-SalespersonCode!FieldValString)
F.Data.DataView.SetSort("dtIvcCust","v_sort","[Shipment-SalesOrderShipTo-Customer-Sales-Salesperson-SalespersonCode] DESC")
V.Local.sEnd.Set(V.DataView.dtIvcCust!v_sort(0).Shipment-SalesOrderShipTo-Customer-Sales-Salesperson-SalespersonCode!FieldValString)
F.Data.DataView.Close("dtIvcCust","v_sort")

'Get Sales rep id and name.
F.Intrinsic.Control.If(V.Local.sBeg.Trim,=,"","AND",V.Local.sEnd.Trim,=,"")
'Check to see if Sales-Rep-Name exists. If not, add it.
	F.Intrinsic.String.IsInString(V.DataTable.dtIvcCust.FieldNames,"*!*Sales-Rep-Name",False,V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet,=,False)
		F.Data.DataTable.AddColumn("dtIvcCust","Sales-Rep-Name","String","")
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Global.Object.LoadDataTable("dtSalesRep","oSalesRep","Sales.Support.SalesPersons","GlobalDB",V.Local.iCon,2,TRUE,,-1,V.Local.sBeg,V.Local.sEnd)

	F.Intrinsic.Control.If(V.DataTable.dtSalesRep.RowCount,>,0)
		'Create dictionary from data table and fill dtIvcCust
		F.Data.Dictionary.CreateFromDataTable("dict_RepName","dtSalesRep","SalespersonCode","Information-Name")
		F.Data.DataTable.FillFromDictionary("dtIvcCust","dict_RepName","Shipment-SalesOrderShipTo-Customer-Sales-Salesperson-SalespersonCode","Temp-Sales-Rep-Name")
		'Trimming Sales rep name since it's causing issues in pervasive.
		F.Data.DataTable.AddExpressionColumn("dtIvcCust","Sales-Rep-Name","String","TRIM([Temp-Sales-Rep-Name])")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'Check to see if Sales-Rep-Name exists. If not, add it.
F.Intrinsic.String.IsInString(V.DataTable.dtIvcCust.FieldNames,"*!*Sales-Rep-Name",False,V.Local.bRet)
F.Intrinsic.Control.If(V.Local.bRet,=,False)
	F.Data.DataTable.AddColumn("dtIvcCust","Sales-Rep-Name","String","")
F.Intrinsic.Control.EndIf

F.Data.DataTable.Close("dtSalesRep")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Fill_SalesRep_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	'If no data found in data table, exitsub.
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,=,23075)
		F.Global.Object.CloseConnection("GlobalDB",V.Local.iCon)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.Fill_Sales_Rep_Name.End

Program.Sub.Fill_Ship_Name.Start
F.Intrinsic.Control.SetErrorHandler("Fill_Ship_Name_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iCon.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.sBeg.Declare(String)
V.Local.sEnd.Declare(String)
V.Local.sProps.Declare(String)
V.Local.bRet.Declare(Boolean)

'Using dictionary to fill ship names
F.Data.DataTable.AddColumn("dtIvcCust","Temp-Ship-Name","String","")
F.Data.DataView.Create("dtIvcCust","v_sort")
F.Data.DataView.SetSort("dtIvcCust","v_sort","[Shipment-SalesOrder-Customer-CustomerNumber] ASC")
V.Local.sBeg.Set(V.DataView.dtIvcCust!v_sort(0).Shipment-SalesOrder-Customer-CustomerNumber!FieldValString)
F.Data.DataView.SetSort("dtIvcCust","v_sort","[Shipment-SalesOrder-Customer-CustomerNumber] DESC")
V.Local.sEnd.Set(V.DataView.dtIvcCust!v_sort(0).Shipment-SalesOrder-Customer-CustomerNumber!FieldValString)
F.Data.DataView.Close("dtIvcCust","v_sort")

'Get Shipment Customer id and name.
F.Intrinsic.Control.If(V.Local.sBeg.Trim,=,"","AND",V.Local.sEnd.Trim,=,"")
	'Check to see if Ship-Customer-Name exists. If not, add it.
	F.Intrinsic.String.IsInString(V.DataTable.dtIvcCust.FieldNames,"*!*Ship-Name",False,V.Local.bRet)
	F.Intrinsic.Control.If(V.Local.bRet,=,False)
		F.Data.DataTable.AddColumn("dtIvcCust","Ship-Name","String","")
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Else
	F.Global.Object.LoadDataTable("dtShipName","oShipName","Sales.Customers","GlobalDB",V.Local.iCon,10,TRUE,,-1,V.Local.sBeg,V.Local.sEnd)

	F.Intrinsic.Control.If(V.DataTable.dtShipName.RowCount,>,0)
		'Create dictionary from data table and fill dtIvcCust
		F.Data.Dictionary.CreateFromDataTable("dict_ShipName","dtShipName","CustomerNumber","Billing-Address-Name")
		F.Data.DataTable.FillFromDictionary("dtIvcCust","dict_ShipName","Shipment-SalesOrder-Customer-CustomerNumber","Temp-Ship-Name")				
		'Trimming Ship name since it's causing issues in pervasive.
		F.Data.DataTable.AddExpressionColumn("dtIvcCust","Ship-Name","String","TRIM([Temp-Ship-Name])")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'Check to see if Ship-Name exists. If not, add it.
F.Intrinsic.String.IsInString(V.DataTable.dtIvcCust.FieldNames,"*!*Ship-Name",False,V.Local.bRet)
F.Intrinsic.Control.If(V.Local.bRet,=,False)
	F.Data.DataTable.AddColumn("dtIvcCust","Ship-Name","String","")
F.Intrinsic.Control.EndIf

F.Data.DataTable.Close("dtShipName")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Fill_Ship_Name_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	'If no data found in data table, exitsub.
	F.Intrinsic.Control.If(V.Ambient.ErrorNumber,=,23075)
		F.Global.Object.CloseConnection("GlobalDB",V.Local.iCon)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.Fill_Ship_Name.End

Program.Sub.Column_Qty_Shipped.Start
'Determine Qty Shipped
V.Local.Xp.Declare(String)
V.Local.sOpt1.Declare(String)
V.Local.Ordinals.Declare(String)
V.Local.iRet.Declare(Long)
'Add Qty shipped column which will be used for the report.

'Seeing if option is active: Adv Company Options Order Entry > Use Weight to Calculate Extended Price

'Reading company option: Use Weight to Calculate Extended Price is active or not
f.ODBC.Connection!conx.ExecuteAndReturn("Select ASCII_FLAG from OP_HEADER where ID='090000' and SEQUENCE='0000'",v.Local.sOpt1)
'Company option based on dtCompOptions datatable.
F.Intrinsic.Control.If(V.Local.sOpt1.Trim,=,"Y")
	'If Weight <> 0 And  UM = 'LB' Then Qty_Shipped = Weight, else Qty_Shipped = Qty_Shipped
	V.Local.Xp.Set("IIF([ShipmentLine-SalesOrderLine-Sales-UnitOfMeasure-UnitOfMeasureCode] = 'LB' AND [ShipmentLine-SalesOrderLine-Part-PhysicalProperty-Weight] <> 0,[ShipmentLine-SalesOrderLine-Part-PhysicalProperty-Weight],[ShipmentLine-Quantity-Shipped])")
	F.Data.DataTable.AddExpressionColumn("dtIvcCust","Rpt-Qty-Shipped","Float",V.Local.Xp)
F.Intrinsic.Control.EndIf

Program.Sub.Column_Qty_Shipped.End

Program.Sub.Column_Extended_Total_Costs.Start
'Get Extended Total Costs
V.Local.Xp.Declare(String)
V.Local.bool.Declare(Boolean)

F.Intrinsic.String.IsInString(V.DataTable.dtIvcCust.FieldNames,"Rpt-Qty-Shipped",True,V.Local.bool)
F.Intrinsic.Control.If(V.Local.bool,=,True)
	'qty Shipped * Unit cost
	'If company option Use Weight to Calculate Extended Price is active  AND ORDER_HIST_LINE: QTY_FRAC (weight) not equal zeroes  AND ORDER_HIST_LINE: UM = 'LB'
	V.Local.Xp.Set("IIF([ShipmentLine-SalesOrderLine-Sales-UnitOfMeasure-UnitOfMeasureCode] = 'LB' AND [ShipmentLine-SalesOrderLine-Part-PhysicalProperty-Weight] <> 0,[Inventory-Cost-MonetaryValue-Company-PerPound] * [Rpt-Qty-Shipped],[ShipmentLine-SalesOrderLine-Part-Cost-MonetaryValue-Company-Unit] * [ShipmentLine-Quantity-Shipped])")
F.Intrinsic.Control.Else
	'Qty Shipped * Unit Cost
	V.Local.Xp.Set("[ShipmentLine-Quantity-Shipped] * [ShipmentLine-SalesOrderLine-Part-Cost-MonetaryValue-Company-Unit]")
F.Intrinsic.Control.EndIf

'Unit Cost is zero if the customer has chosen to Ignore Parent Cost*
F.Intrinsic.Control.If(V.Screen.SS_Form1!chkParentCost.Value,=,1)
	V.Local.Xp.Set("[ShipmentLine-SalesOrderLine-Part-Cost-MonetaryValue-Company-Unit] * 0")
F.Intrinsic.Control.EndIf
F.Data.DataTable.AddExpressionColumn("dtIvcCust","Extended-Total-Costs","Float",V.Local.Xp)

Program.Sub.Column_Extended_Total_Costs.End

Program.Sub.Column_Profit_Dollar_Amt.Start
'Profit Dollar Amount = Total Sales Amount MINUS Extended Total Cost

'Pricing.MonetaryValue.Company.Extended - Extended Total Costs
F.Data.DataTable.AddExpressionColumn("dtIvcCust","Profit-Dollar-Amount","Float","[ShipmentLine-SalesOrderLine-Pricing-MonetaryValue-Company-Extended] - [Extended-Total-Costs]")
Program.Sub.Column_Profit_Dollar_Amt.End

Program.Sub.Column_Profit_Percentage.Start
'Get Profit Percentage
V.Local.Xp.Declare(String)
'Profit Percentage = If Total Sales Amount is zero, then Profit Percentage is zero, 
'Extended-Total-Costs
V.Local.Xp.Set("IIF([Extended-Total-Costs] = 0,0,[Profit-Dollar-Amount]/[Extended-Total-Costs]*100)")
F.Data.DataTable.AddExpressionColumn("dtIvcCust","Profit-Percentage","Float",V.Local.Xp)

Program.Sub.Column_Profit_Percentage.End

Program.Sub.Column_ProfitPercentage.Start
'Get Gross Profit Percentage
V.Local.Xp.Declare(String)
'Profit Percentage = If Total Sales Amount is zero, then Profit Percentage is zero, 
'Pricing-MonetaryValue-Company-Extended
V.Local.Xp.Set("IIF([ShipmentLine-SalesOrderLine-Pricing-MonetaryValue-Company-Extended] = 0,0,[Profit-Dollar-Amount]/[ShipmentLine-SalesOrderLine-Pricing-MonetaryValue-Company-Extended]*100)")
F.Data.DataTable.AddExpressionColumn("dtIvcCust","GrossProfit-Percentage","Float",V.Local.Xp)

Program.Sub.Column_ProfitPercentage.End

Program.Sub.Column_Progress_Bill_Flag.Start
'Column_Progress_Bill_Flag
V.Local.s.Declare(String)

'5 = ProgressBill
'Progress Bill Flag (0 is False, 1 is True) = If ORDER_HIST_LINE: LINE_TYPE = 'P' (progress bill), set to 1; otherwise, set to 0.
F.Data.DataTable.AddExpressionColumn("dtIvcCust","Progress-Bill-Flag","Boolean","IIF([ShipmentLine-SalesOrderLine-Information-Type] = 5 ,True,False)")

Program.Sub.Column_Progress_Bill_Flag.End

Program.Sub.Column_Freight_Flag.Start
'Freight Flag
'Freight Flag (0 is False, 1 is True) = If ORDER_HIST_LINE: LINE_TYPE = 'F' (freight), set to 1; otherwise, set to 0.
F.Data.DataTable.AddExpressionColumn("dtIvcCust","Freight-Line-Flag","Boolean","IIF([ShipmentLine-SalesOrderLine-Information-Type] = 4 ,True,False)")

Program.Sub.Column_Freight_Flag.End

Program.Sub.Column_Exclusion_Acct_Flag.Start
'Exculsion Account Flag
V.Local.i.Declare(Long)
V.Local.ii.Declare(Long)
V.Local.iCon.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.sProps.Declare(String)
V.Local.Array_Excl_Acct.Declare(String)
V.Local.Exp.Declare(String)
V.Local.Ord.Declare(String)
V.Local.sQuery.Declare(String)

V.Local.sQuery.Set("SELECT ACCT_NUM FROM AR_EXCL_ACCT")
'Add Exclusion acct column to datatable. 
F.Data.DataTable.AddColumn("dtIvcCust","Excl-Acct-Flag","Boolean",False)
'Use dataview to sort and find top and lowest acct number to use as a range for pulling in object. 
F.Data.DataView.Create("dtIvcCust","dvIvcCust")
'make sure account number is not blank
F.Data.DataView.SetFilter("dtIvcCust","dvIvcCust","[ShipmentLine-SalesOrderLine-Accounting-Account-AccountNumber] <> ''")
F.Intrinsic.Control.If(V.DataView.dtIvcCust!dvIvcCust.RowCount,>=,0)
	'Sort acct numbers ascending.
	'Pull objects
	'Bring in all 90 exclusion accounts.
	'Function.Intrinsic.Control.Try
	'	F.Global.Object.LoadDataTable("dtExclAcct","oExclAcct","Accounting.AR.ARExclusionAccounts","GlobalDB",V.Local.iCon,1,TRUE,,1,90,V.Local.iRet)
	'Function.Intrinsic.Control.EndTry	
	Function.Data.DataTable.CreateFromSQL("dtExclAcct","conx",V.Local.sQuery,True)	
F.Intrinsic.Control.EndIf
F.Data.DataView.Close("dtIvcCust","dvIvcCust")

'If table exists, see if any lines show up in the ExlAcct Datatable.. if it does, flag Exclusion-Acct-Flag column as True, otherwise, False.
F.Intrinsic.Control.If(V.DataTable.dtExclAcct.Exists,=,True)
	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.dtExclAcct.RowCount--,1)
		'Select from IvcCust where Excl_acct = the dtExlAcct Acct Number
		F.Intrinsic.String.Build("[ShipmentLine-SalesOrderLine-Accounting-Account-AccountNumber] = '{0}'",V.DataTable.dtExclAcct(V.Local.i).ACCT_NUM.FieldValTrim,V.Local.Exp)
		F.Data.DataTable.Select("dtIvcCust",V.Local.Exp,V.Local.Ord)
		'if records found then loop through each ordinal returned, setting the Excl-Acct-Flag to True
		F.Intrinsic.Control.If(V.Local.Ord,<>,"***NORETURN***")
			F.Intrinsic.String.Split(V.Local.Ord,"*!*",V.Local.Ord)
			F.Intrinsic.Control.For(V.Local.ii,V.Local.Ord.LBound,V.Local.Ord.UBound,1)
				F.Data.DataTable.SetValue("dtIvcCust",V.Local.Ord(V.Local.ii).Long,"Excl-Acct-Flag",True)
			F.Intrinsic.Control.Next(V.Local.ii)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.i)
F.Intrinsic.Control.EndIf

Program.Sub.Column_Exclusion_Acct_Flag.End

Program.Sub.Listview_Loop.Start
F.Intrinsic.Control.SetErrorHandler("Print_ListviewLoop_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sRows.Declare(String)
V.Local.iC.Declare(Long)
V.Local.iOrd.Declare(Long)
V.Local.sCustRange.Declare(String)
V.Local.sRangePad1.Declare(String)
V.Local.sRangePad2.Declare(String)
V.Local.sError.Declare(String)

'Retrieving the customer range from the listview.
Gui.SS_Form1.lvw1_Cust.RetrieveAllListItems(V.Local.sRows)

F.Intrinsic.Control.If(V.Local.sRows,<>,"***NORETURN***")
		F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
	F.Intrinsic.Control.For(V.Local.iC,0,V.Local.sRows.UBound,1)
		Gui.SS_Form1.lvw1_Cust.RetrieveItemOrdinal(V.Local.sRows(V.Local.iC),V.Local.iOrd)
		V.Local.sCustRange.Set(V.Screen.SS_Form1!lvw1_Cust.ListItemTextExtended(V.Local.iOrd))
		F.Intrinsic.String.Split(V.Local.sCustRange,"*!*",V.Local.sCustRange)
		F.Intrinsic.String.RPad(V.Local.sCustRange(0)," ",6,V.Local.sRangePad1)
		F.Intrinsic.String.RPad(V.Local.sCustRange(1)," ",6,V.Local.sRangePad2)
		F.Intrinsic.Control.If(V.Local.iC,>=,1)
			'Mutli selection flag used for crystal report.
			V.Global.bMultiSelection.Set(True)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.Screen.SS_Form1!chk1_Alldates.Value,=,0,"AND",V.Screen.SS_Form1!chk1_AllCust.Value,=,0)
			F.Intrinsic.Control.CallSub(Print_DateCust_Range,"BegCust",V.Local.sRangePad1,"BegDate",V.Screen.SS_Form1!dtp1_BegDate.Value,"EndCust",V.Local.sRangePad2,"EndDate",V.Screen.SS_Form1!dtp1_EndDate.Value,"counter",v.Local.ic)
		F.Intrinsic.Control.ElseIf(V.Screen.SS_Form1!chk1_Alldates.Value,=,1,"AND",V.Screen.SS_Form1!chk1_AllCust.Value,=,0)
			F.Intrinsic.Control.CallSub(Print_CustRange,"BegCust",V.Local.sRangePad1,"EndCust",V.Local.sRangePad2,"counter",v.Local.ic)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iC)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Print_ListviewLoop_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.Listview_Loop.End

Program.Sub.Filter_DataTable.Start
F.Intrinsic.Control.SetErrorHandler("FilterData_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.strFilter.Declare(String)
V.Local.strFilter.Set("")

F.Intrinsic.Control.If(V.Screen.SS_Form1!chk1_InclProg.Value,=,0)
	V.Local.strFilter.Append("[Progress-Bill-Flag] = false")
F.Intrinsic.Control.Else
	V.Local.strFilter.Append("([Progress-Bill-Flag] = false OR [Progress-Bill-Flag] = true)")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Screen.SS_Form1!chk1_InclFreight.Value,=,0)
	V.Local.strFilter.Append(" AND [Freight-Line-Flag] = false")
F.Intrinsic.Control.Else
	V.Local.strFilter.Append(" AND ([Freight-Line-Flag] = false OR [Freight-Line-Flag] = true)")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Screen.SS_Form1!chk1_InclExclusions.Value,=,1)
	V.Local.strFilter.Append(" AND [Excl-Acct-Flag] = false")
F.Intrinsic.Control.Else
	V.Local.strFilter.Append(" AND ([Excl-Acct-Flag] = false OR [Excl-Acct-Flag] = true)")
F.Intrinsic.Control.EndIf

F.Data.DataView.Create("dtIvcCust","dvIvcCust",22,V.Local.strFilter,"")
F.Data.DataView.ToDataTable("dtIvcCust","dvIvcCust","dtIvcCusts",True)

F.Data.DataView.Close("dtIvcCust", "dvIvcCust")
F.Data.DataTable.Close("dtIvcCust")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("FilterData_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.Filter_DataTable.End

Program.Sub.CallBI.Start
F.Intrinsic.Control.SetErrorHandler("CallBI_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Start ==========================================================
V.Local.sParams.Declare(String)
V.Local.sValues.Declare(String)
V.local.iret.declare(Long)

V.Local.sParams.set("AllCust*!*AllDates*!*BegDate*!*EndDate*!*PrtCDec*!*PrtDec*!*InclProg*!*InclFreight*!*InclExclusions")
F.Intrinsic.String.Build("{0}*!*{1}*!*{2}*!*{3}*!*{4}*!*{5}*!*{6}*!*{7}*!*{8}",V.Screen.SS_Form1!chk1_AllCust.Value,V.Screen.SS_Form1!chk1_Alldates.Value,V.Screen.SS_Form1!dtp1_Begdate.Value,V.Screen.SS_Form1!dtp1_Enddate.Value,V.Global.CDec,V.Global.QDec,V.Screen.SS_Form1!chk1_InclProg.Value,V.Screen.SS_Form1!chk1_InclFreight.Value,V.Screen.SS_Form1!chk1_InclExclusions.Value,V.Local.sValues)

f.Global.BI.runreportpreprocessor(v.Global.iBIRunID,v.Global.iLogid,v.Local.sParams,v.Local.sValues,"",-1,true,"",-1,"",-1,"","",v.Local.iret)

'End ==========================================================

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("CallBI_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.CallBI.End

Program.Sub.ss_form1_unload.Start
F.Intrinsic.Control.SetErrorHandler("ss_form1_unload_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)
V.Local.iCon.Declare(Long)

'Start ========================================================
'Close connection
F.Global.Object.CloseConnection("GlobalDB",V.Local.iCon)
F.Intrinsic.Control.End

'End ==========================================================

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("ss_form1_unload_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
Function.Intrinsic.Control.EndIf

Program.Sub.ss_form1_unload.End

Program.Sub.chk1_allCustl_click.Start
F.Intrinsic.Control.SetErrorHandler("chk1_allCust_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Start ========================================================

'All

F.Intrinsic.Control.If(V.Screen.SS_Form1!chk1_allCust.Value,=,1)
'disable entry of range
	Gui.SS_Form1.txt1_BegCust.Enabled(false)
	Gui.SS_Form1.txt1_EndCust.Enabled(false)
	Gui.SS_Form1.cmd_txt1_BegCust.Enabled(false)
	Gui.SS_Form1.cmd_txt1_EndCust.Enabled(false)
	Gui.ss_form1.cmd_lvw1_Custadd.Enabled(false)
	Gui.ss_form1.cmd_lvw1_Custclear.Enabled(false)
	Gui.ss_form1.cmd_lvw1_Custdelete.Enabled(false)
	Gui.SS_Form1.txt1_BegCust.Text("")
	Gui.SS_Form1.txt1_EndCust.Text("")
	Gui.SS_Form1.lvw1_Cust.ClearItems

F.Intrinsic.control.Else

'enable entry of range
	Gui.SS_Form1.txt1_BegCust.Enabled(true)
	Gui.SS_Form1.txt1_EndCust.Enabled(true)
	Gui.SS_Form1.cmd_txt1_BegCust.Enabled(true)
	Gui.SS_Form1.cmd_txt1_EndCust.Enabled(true)
	Gui.ss_form1.cmd_lvw1_Custadd.Enabled(true)
	Gui.ss_form1.cmd_lvw1_Custclear.Enabled(true)
	Gui.ss_form1.cmd_lvw1_Custdelete.Enabled(true)
	Gui.SS_Form1.lvw1_Cust.ClearItems
F.Intrinsic.Control.EndIf

'End ==========================================================

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chk1_allCust_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.chk1_allCustl_click.End

Program.Sub.txt1_begCust_gotfocus.Start
F.Intrinsic.Control.SetErrorHandler("txt1_begCust_gotfocus_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.SS_Form1.txt1_BegCust.SelectAll

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("txt1_begCust_gotfocus_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.txt1_begCust_gotfocus.End

Program.Sub.txt1_begCust_lostfocus.Start
F.Intrinsic.Control.SetErrorHandler("txt1_begpart_lostfocus_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.SS_Form1.txt1_EndCust.Text(V.Screen.SS_Form1!txt1_BegCust.Text)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("txt1_begpart_lostfocus_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.txt1_begCust_lostfocus.End

Program.Sub.txt1_endCust_gotfocus.Start
F.Intrinsic.Control.SetErrorHandler("txt1_endpart_gotfocus_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

Gui.SS_Form1.txt1_EndCust.SelectAll

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("txt1_endpart_gotfocus_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.txt1_endCust_gotfocus.End

Program.Sub.cmd_txt1_begCust_click.Start
F.Intrinsic.Control.SetErrorHandler("cmd_txt1_begpart_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Start ==========================================================
'Beginning Browser
V.Local.sRet.Declare(String)

F.Intrinsic.UI.SetBrowserHotTypeAhead(True)

F.Intrinsic.UI.Browser(205,"",V.Local.sRet)

F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	Gui.ss_form1.txt1_begCust.Text(V.Local.sRet.Trim)
	Gui.SS_Form1.txt1_EndCust.Text(V.Screen.SS_Form1!txt1_BegCust.Text)
F.Intrinsic.Control.EndIf

'End ==========================================================

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmd_txt1_begpart_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.cmd_txt1_begCust_click.End

Program.Sub.cmd_txt1_endCust_click.Start
F.Intrinsic.Control.SetErrorHandler("cmd_txt1_endpart_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Start ==========================================================
'Ending Browser
V.Local.sRet.Declare(String)

F.Intrinsic.UI.SetBrowserHotTypeAhead(True)

F.Intrinsic.UI.Browser(205,"",V.Local.sRet)

F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	Gui.ss_form1.txt1_endCust.Text(V.Local.sRet.Trim)
F.Intrinsic.Control.EndIf

'End ==========================================================

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmd_txt1_endpart_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.cmd_txt1_endCust_click.End

Program.Sub.cmd_lvw1_Custadd_click.Start
F.Intrinsic.Control.SetErrorHandler("cmd_lvw1_Custadd_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Start ========================================================
'Listview Add button
F.Intrinsic.control.If(V.screen.SS_Form1!txt1_BegCust.text,<," ")
F.Intrinsic.control.andIf(V.screen.SS_Form1!txt1_EndCust.text,<," ")
	F.intrinsic.control.exitsub
Function.Intrinsic.Control.EndIf

F.Intrinsic.Math.Add(V.global.iKey,1,V.global.iKey)
Gui.SS_Form1.lvw1_Cust.AddListItem(V.global.iKey,V.Screen.SS_Form1!txt1_BegCust.Text)
Gui.SS_Form1.lvw1_Cust.SetListItemSubItemText(V.global.iKey,1,V.Screen.SS_Form1!txt1_EndCust.Text)
Gui.SS_Form1.txt1_BegCust.Text("")
Gui.SS_Form1.txt1_EndCust.Text("")

'End ==========================================================

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmd_lvw1_Custadd_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.cmd_lvw1_Custadd_click.End

Program.Sub.cmd_lvw1_Custdelete_click.Start
F.Intrinsic.Control.SetErrorHandler("cmd_lvw1_Custdelete_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Start ========================================================
'Listview delete button
V.Local.iKey.Declare(Long)
V.Local.iOrd.Declare(Long)

V.Local.iKey.Set(V.Screen.SS_Form1!lvw1_Cust.SelectedItemKey)
Gui.SS_Form1.lvw1_Cust.removeitem(V.Local.iKey)

'End ==========================================================

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmd_lvw1_Custdelete_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.cmd_lvw1_Custdelete_click.End

Program.Sub.cmd_lvw1_Custclear_click.Start
F.Intrinsic.Control.SetErrorHandler("cmd_lvw1_Custclear_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Start ========================================================
'Listview clear button
Gui.SS_Form1.lvw1_Cust.ClearItems

'End ==========================================================

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("cmd_lvw1_Custclear_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.cmd_lvw1_Custclear_click.End

Program.Sub.chk1_alldates_click.Start
F.Intrinsic.Control.SetErrorHandler("chk1_alldates_click_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String)

'Start ========================================================

'All Dates

F.Intrinsic.Control.If(V.Screen.SS_Form1!chk1_AllDates.Value,=,1)
'disable entry of date range
	Gui.SS_Form1.dtp1_BegDate.enabled(false)
	Gui.SS_Form1.dtp1_EndDate.Enabled(false)

F.Intrinsic.control.Else

'enable entry of date range
	Gui.SS_Form1.dtp1_BegDate.Enabled(true)
	Gui.SS_Form1.dtp1_EndDate.Enabled(true)
F.Intrinsic.Control.EndIf

'End ==========================================================

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("chk1_alldates_click_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf

Program.Sub.chk1_alldates_click.End

Program.Sub.chk1_inclprog_click.Start
Program.Sub.chk1_inclprog_click.End

Program.Sub.Update_DT.Start
F.Intrinsic.Control.SetErrorHandler("Update_DT_Err")
F.Intrinsic.Control.ClearErrors

V.Local.sError.Declare(String,"")
V.Local.sFilter.Declare(String,"")
V.Local.i.Declare(Long,0)
V.Local.iC.Declare(Long,0)
V.Local.iA.Declare(Long,0)
v.Local.fFreight.Declare(Float,0)
v.Local.fValue.Declare(Float,0)
V.Local.fCaseFreight.Declare(Float,0)
V.Local.fAllow.Declare(Float,0)
V.Local.iCases.Declare(Long,0)
V.Local.sSql.Declare(String,"")
V.Local.fComRate.Declare(Float,0)
V.Local.fTemp.Declare(Float,0)

F.Data.DataView.Create("dtIvcCusts","TEMP",22,"","")
F.Data.DataView.ToDataTableDistinct("dtIvcCusts","Temp","Additional","InvoiceNumber*!*SalesOrderNumber",True)
F.Data.DataView.Close("dtIvcCusts","TEMP")

F.Data.DataTable.SetValue("dtIvcCusts",-1,"Freight",0,"ALLOWANCE",0,"COMMISSIONS",0)

F.Data.Dictionary.CreateFromSQL("Pallets","conx","Select Part, Cntnrs_Per_Pallet From V_Inventory_Mst3")
F.Data.Dictionary.SetDefaultReturn("Pallets","0")

F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.Additional.RowCount--,1)
'	F.Intrinsic.String.Build("InvoiceNumber = '{0}' and SalesOrderNumber = '{1}' and [ShipmentLine-SalesOrderLine-Information-Type] = 0",V.DataTable.Additional(V.Local.i).InvoiceNumber!FieldVal,V.DataTable.Additional(V.Local.i).SalesOrderNumber!FieldVal,V.Local.sFilter)
'	F.Data.DataView.Create("dtIvcCusts","TEMP",22,V.Local.sFilter,"")
'	'Getting Freight and spreading freight out to the lines based on qty and setting that value to the newly freight column
'	F.Intrinsic.String.Build("InvoiceNumber = '{0}' and SalesOrderNumber = '{1}' and [ShipmentLine-SalesOrderLine-Information-Type] = 4",V.DataTable.Additional(V.Local.i).InvoiceNumber!FieldVal,V.DataTable.Additional(V.Local.i).SalesOrderNumber!FieldVal,V.Local.sFilter)
'	F.Data.DataView.Create("dtIvcCusts","TEMPFREIGHT",22,V.Local.sFilter,"")
	F.Intrinsic.String.Build("SalesOrderNumber = '{0}' and ([ShipmentLine-SalesOrderLine-Information-Type] = 0 or [ShipmentLine-SalesOrderLine-Information-Type] = 3) and [ShipmentLine-Quantity-Shipped] > -1",V.DataTable.Additional(V.Local.i).SalesOrderNumber!FieldVal,V.Local.sFilter)
	F.Data.DataView.Create("dtIvcCusts","TEMP",22,V.Local.sFilter,"")
	'Getting Freight and spreading freight out to the lines based on qty and setting that value to the newly freight column
	F.Intrinsic.String.Build("SalesOrderNumber = '{0}' and [ShipmentLine-SalesOrderLine-Information-Type] = 4",V.DataTable.Additional(V.Local.i).SalesOrderNumber!FieldVal,V.Local.sFilter)
	F.Data.DataView.Create("dtIvcCusts","TEMPFREIGHT",22,V.Local.sFilter,"")
	V.Local.fFreight.Set(0)
	F.Intrinsic.Control.If(V.DataView.dtIvcCusts!TEMPFREIGHT.RowCount--,<>,-1)
		F.Data.DataView.ToDataTable("dtIvcCusts","TEMP","Temp",True)
		F.Data.DataTable.AddExpressionColumn("Temp","TQty","Float","Sum([ShipmentLine-Quantity-Shipped])")
		F.Data.DataTable.AddColumn("Temp","Pallets",Long)
		F.Data.DataTable.FillFromDictionary("Temp","Pallets","Part","Pallets")
		F.Data.DataTable.AddExpressionColumn("Temp","NumPall","Float","[ShipmentLine-Quantity-Shipped]/[Pallets]")
		F.Data.DataTable.AddExpressionColumn("Temp","TPall","Float","Sum([NumPall])")

		F.Intrinsic.Control.If(V.DataTable.Temp.RowCount--,<>,-1)
			F.Intrinsic.Control.If(V.DataTable.Temp(V.DataTable.Temp.RowCount--).TPall!FieldValFloat,<>,0)
				F.Intrinsic.Math.Div(V.DataView.dtIvcCusts!TEMPFREIGHT(V.DataView.dtIvcCusts!TEMPFREIGHT.RowCount--).Profit-Dollar-Amount!FieldValFloat,V.DataTable.Temp(V.DataTable.Temp.RowCount--).TPall!FieldValFloat,V.Local.fFreight)
			F.Intrinsic.Control.Else
				V.Local.fFreight.Set(V.DataView.dtIvcCusts!TEMPFREIGHT(V.DataView.dtIvcCusts!TEMPFREIGHT.RowCount--).Profit-Dollar-Amount!FieldValFloat)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Math.Mult(V.Local.fFreight,-1,V.Local.fFreight)
		F.Intrinsic.Control.EndIf
		F.Data.DataTable.Close("Temp")
		F.Intrinsic.Control.For(V.Local.iC,0,V.DataView.dtIvcCusts!TEMP.RowCount--,1)
			F.Intrinsic.String.Build("select Cntnrs_per_Pallet from V_INVENTORY_MST3 Where Part = '{0}' and Location = '{1}'",V.DataView.dtIvcCusts!TEMP(V.Local.iC).Part!FieldValTrim,V.DataView.dtIvcCusts!TEMP(V.Local.iC).ShipmentLine-SalesOrderLine-Part-LocationCode!FieldValTrim,V.Local.sSql)
			F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.iCases)
'			F.Intrinsic.Math.Mult(V.Local.fFreight,V.DataView.dtIvcCusts!TEMP(V.Local.iC).ShipmentLine-Quantity-Shipped!FieldValFloat,V.Local.fValue)
			F.Intrinsic.Control.If(V.Local.iCases,<>,0)
				F.Intrinsic.Math.Div(V.DataView.dtIvcCusts!TEMP(V.Local.iC).ShipmentLine-Quantity-Shipped!FieldValFloat,V.Local.iCases,V.Local.iCases)
			F.Intrinsic.Control.Else
				V.Local.iCases.Set(1)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Local.iCases,>,0)
				F.Intrinsic.Math.Mult(V.Local.fFreight,V.Local.iCases,V.Local.fCaseFreight)
			F.Intrinsic.Control.Else
				V.Local.fCaseFreight.Set(V.Local.fValue)
			F.Intrinsic.Control.EndIf
			F.Data.DataView.SetValue("dtIvcCusts","Temp",V.Local.iC,"Freight",V.Local.fCaseFreight)
'			F.Intrinsic.Math.Add(V.Local.fValue,V.DataView.dtIvcCusts!TEMP(V.Local.iC).Extended-Total-Costs!FieldValFloat,V.Local.fValue)
'			F.Data.DataView.SetValue("dtIvcCusts","Temp",V.Local.iC,"Total-Costs",V.Local.fValue)
		F.Intrinsic.Control.Next(V.Local.iC)
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.DataView.dtIvcCusts!TEMP.RowCount--,<>,-1)
			F.Data.DataView.SetValue("dtIvcCusts","Temp",-1,"FREIGHT",V.Local.fFreight)
'			F.Intrinsic.Control.For(V.Local.iC,0,V.DataView.dtIvcCusts!TEMP.RowCount--,1)
'				F.Data.DataView.SetValue("dtIvcCusts","Temp",V.Local.iC,"Total-Costs",V.DataView.dtIvcCusts!TEMP(V.Local.iC).Extended-Total-Costs!FieldValFloat)
'			F.Intrinsic.Control.Next(V.Local.iC)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	F.Data.DataView.Close("dtIvcCusts","TEMPFREIGHT")
''''''''''''
'	F.Intrinsic.String.Build("SalesOrderNumber = '{0}' and [ShipmentLine-SalesOrderLine-Information-Type] = 0 and [ShipmentLine-Quantity-Shipped] < 0",V.DataTable.Additional(V.Local.i).SalesOrderNumber!FieldVal,V.Local.sFilter)
	F.Intrinsic.String.Build("SalesOrderNumber = '{0}' and [ShipmentLine-SalesOrderLine-Information-Type] = 0 and [Profit-Dollar-Amount] < 0",V.DataTable.Additional(V.Local.i).SalesOrderNumber!FieldVal,V.Local.sFilter)
	F.Data.DataView.Create("dtIvcCusts","TEMPAllowance",22,V.Local.sFilter,"")
	
	F.Intrinsic.Control.If(V.DataView.dtIvcCusts!TEMPAllowance.RowCount--,<>,-1)	
		F.Intrinsic.Control.For(V.Local.iC,0,V.DataView.dtIvcCusts!TEMPAllowance.RowCount--,1)
			F.Intrinsic.String.Build("SalesOrderNumber = '{0}' and SalesOrderLineNumber = '{1}' and [ShipmentLine-Quantity-Shipped] > 0",V.DataView.dtIvcCusts!TEMPAllowance(V.Local.iC).SalesOrderNumber!FieldVal,V.DataView.dtIvcCusts!TEMPAllowance(V.Local.iC).SalesOrderLineNumber!FieldVal,V.Local.sFilter)
			F.Data.DataView.Create("dtIvcCusts","SOLINEALLOW",22,V.Local.sFilter,"")
			F.Data.DataView.ToDataTable("dtIvcCusts","SOLINEALLOW","Temp",True)
'			F.Data.DataTable.AddExpressionColumn("Temp","TQty","Float","Sum([ShipmentLine-Quantity-Shipped])")
			F.Intrinsic.Control.If(V.DataTable.Temp.RowCount--,<>,-1)
'				F.Intrinsic.Control.If(V.DataTable.Temp(V.DataTable.Temp.RowCount--).TQty!FieldValFloat,<>,0)
'					F.Intrinsic.Math.Div(V.DataView.dtIvcCusts!TEMPAllowance(V.Local.iC).Profit-Dollar-Amount!FieldValFloat,V.DataTable.Temp(V.DataTable.Temp.RowCount--).TQty!FieldValFloat,V.Local.fTemp)
'				F.Intrinsic.Control.Else
					V.Local.fTemp.Set(V.DataView.dtIvcCusts!TEMPAllowance(V.Local.iC).Profit-Dollar-Amount!FieldValFloat)
'				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
			F.Data.DataTable.Close("Temp")
			F.Intrinsic.Control.For(V.Local.iA,0,V.DataView.dtIvcCusts!SOLINEALLOW.RowCount--,1)
'				F.Intrinsic.Math.Mult(V.Local.fTemp,V.DataView.dtIvcCusts!SOLINEALLOW(V.Local.iA).ShipmentLine-Quantity-Shipped!FieldValFloat,V.Local.fAllow)
				V.Local.fAllow.Set(v.Local.fTemp)
				F.Intrinsic.Math.Add(V.DataView.dtIvcCusts!SOLINEALLOW(V.Local.iA).Total-Costs!FieldValFloat,V.Local.fAllow,V.Local.fValue)
				F.Data.DataView.SetValue("dtIvcCusts","SOLINEALLOW",V.Local.iA,"Total-Costs",V.Local.fValue)
				F.Intrinsic.Math.Mult(V.Local.fAllow,-1,V.Local.fAllow)
				F.Data.DataView.SetValue("dtIvcCusts","SOLINEALLOW",V.Local.iA,"ALLOWANCE",V.Local.fAllow)
			F.Intrinsic.Control.Next(V.Local.iA)
			F.Data.DataView.Close("dtIvcCusts","SOLINEALLOW")
		F.Intrinsic.Control.Next(V.Local.iC)
	F.Intrinsic.Control.EndIf
	F.Data.DataView.Close("dtIvcCusts","TEMPAllowance")
'''''''''''''''	
	F.Intrinsic.String.Build("SalesOrderNumber = '{0}' and [ShipmentLine-SalesOrderLine-Information-Type] = 0 and [ShipmentLine-Quantity-Shipped] > 0",V.DataTable.Additional(V.Local.i).SalesOrderNumber!FieldVal,V.Local.sFilter)
	F.Data.DataView.Create("dtIvcCusts","SOCOMM",22,V.Local.sFilter,"")
	F.Intrinsic.Control.For(V.Local.iC,0,V.DataView.dtIvcCusts!SOCOMM.RowCount--,1)
		F.Intrinsic.String.Build("Select Top 1 Commission_Rate From Commission_Rate Where Salesperson = '{0}' and Product_Line = '{1}'",V.DataView.dtIvcCusts!SOCOMM(V.Local.iC).Shipment-SalesOrderShipTo-Customer-Sales-Salesperson-SalespersonCode!FieldValTrim,V.DataView.dtIvcCusts!SOCOMM(V.Local.iC).ShipmentLine-SalesOrderLine-Part-Information-ProductLine-ProductLineCode!FieldValTrim,V.Local.sSql)
		F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSql,V.Local.fComRate)
		F.Intrinsic.Math.Sub(V.DataView.dtIvcCusts!SOCOMM(V.Local.iC).Shipmentline-SalesOrderLine-Pricing-Monetaryvalue-Company-Extended!FieldVal,V.DataView.dtIvcCusts!SOCOMM(V.Local.iC).ALLOWANCE!FieldValFloat,V.Local.fValue)
		F.Intrinsic.Math.Mult(V.Local.fValue,V.Local.fComRate,V.Local.fValue)
		V.Local.fAllow.Set(V.Local.fValue)
'		F.Intrinsic.Math.Add(V.DataView.dtIvcCusts!SOCOMM(V.Local.iC).Total-Costs!FieldValFloat,V.Local.fValue,V.Local.fValue)
'		F.Data.DataView.SetValue("dtIvcCusts","SOCOMM",V.Local.iC,"Total-Costs",V.Local.fValue,"COMMISSIONS",V.Local.fAllow)
		F.Data.DataView.SetValue("dtIvcCusts","SOCOMM",V.Local.iC,"COMMISSIONS",V.Local.fAllow)
	F.Intrinsic.Control.Next(V.Local.iC)
	F.Data.DataView.Close("dtIvcCusts","SOCOMM")
	F.Data.DataView.Close("dtIvcCusts","TEMP")
	
F.Intrinsic.Control.Next(V.Local.i)

F.Data.DataView.Create("dtIvcCusts","TEMPFREIGHT",22,"[ShipmentLine-SalesOrderLine-Information-Type] = 4","")
F.Intrinsic.Control.For(V.Local.i,V.DataView.dtIvcCusts!TEMPFREIGHT.RowCount--,0,-1)
	F.Data.DataTable.DeleteRow("dtIvcCusts",V.DataView.dtIvcCusts!TEMPFREIGHT(V.Local.i).DataTableIndex)
F.Intrinsic.Control.Next(V.Local.i)
F.Data.DataView.Close("dtIvcCusts","TEMPFREIGHT")

'''''''''''''''
'F.Data.DataView.Create("dtIvcCusts","TEMPAllowance",22,"[ShipmentLine-SalesOrderLine-Information-Type] = 0 and [ShipmentLine-Quantity-Shipped] < 0","")
F.Data.DataView.Create("dtIvcCusts","TEMPAllowance",22,"[ShipmentLine-SalesOrderLine-Information-Type] = 0 and [Profit-Dollar-Amount] < 0","")
F.Intrinsic.Control.For(V.Local.i,V.DataView.dtIvcCusts!TEMPAllowance.RowCount--,0,-1)
	F.Data.DataTable.DeleteRow("dtIvcCusts",V.DataView.dtIvcCusts!TEMPAllowance(V.Local.i).DataTableIndex)
F.Intrinsic.Control.Next(V.Local.i)
F.Data.DataView.Close("dtIvcCusts","TEMPAllowance")
'''''''''''''''
F.Data.DataTable.AcceptChanges("dtIvcCusts")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Label("Update_DT_Err")
F.Intrinsic.Control.If(V.Ambient.ErrorNumber,<>,0)
	Function.Intrinsic.String.Concat("Project: GCG_6470_SA_BY_CUST_Part.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub(Ss_form1_unload)
Function.Intrinsic.Control.EndIf
Program.Sub.Update_DT.End

Program.Sub.Comments.Start
${$0$}$$}$$}$12:00:00 AM$}$False
${$5$}$2.0.0.0$}$2
${$6$}$dhughes$}$20190312164036769$}$c2B0VQGdJshzQXwjoX6JDhriKzL/P++Dg42SBn4j31FoNl91axG8GZ48n7wHpipd8ohBkzaH57E=
Program.Sub.Comments.End

Program.Sub.ScreenSS.Start
SS_Form1{{CAPTION::Sales Analysis by Customer, Part Number
SS_Form1.CTRL{{NAME::dtp1_Begdate\\TYPE::6\\CAPTION::Beginning Invoice Date\\TABSTOP::1\\GROUP::2\\BROWSER::0\\INTL::779801\\SIZE::1
SS_Form1.CTRL{{NAME::dtp1_Enddate\\TYPE::6\\CAPTION::Ending Invoice Date\\TABSTOP::2\\GROUP::2\\BROWSER::0\\INTL::779901\\SIZE::1
SS_Form1.CTRL{{NAME::chk1_Alldates\\TYPE::9\\CAPTION::All Dates\\TABSTOP::3\\GROUP::-1\\SUBGROUP::1\\BROWSER::0\\INTL::19700\\SIZE::1
SS_Form1.CTRL{{NAME::txt1_BegCust\\TYPE::2\\CAPTION::Beginning Customer Number\\RANGE::lvw1_Cust\\TABSTOP::4\\GROUP::1\\BROWSER::1\\INTL::61000\\SIZE::1
SS_Form1.CTRL{{NAME::txt1_EndCust\\TYPE::2\\CAPTION::Ending Customer Number\\RANGE::lvw1_Cust\\TABSTOP::5\\GROUP::1\\BROWSER::1\\INTL::212900\\SIZE::1
SS_Form1.CTRL{{NAME::chk1_AllCust\\TYPE::9\\CAPTION::All Customers\\TABSTOP::6\\GROUP::-1\\SUBGROUP::1\\BROWSER::0\\INTL::19200\\SIZE::1
SS_Form1.CTRL{{NAME::lvw1_Cust\\TYPE::7\\GROUP::-1\\BROWSER::0\\SIZE::1
SS_Form1.CTRL{{NAME::chk1_InclProg\\TYPE::9\\CAPTION::Include Progress Bill Lines\\TABSTOP::7\\GROUP::-1\\BROWSER::0\\INTL::291501\\SIZE::1
SS_Form1.CTRL{{NAME::chk1_InclFreight\\TYPE::9\\CAPTION::Include Freight Charges\\TABSTOP::8\\GROUP::-1\\BROWSER::0\\INTL::291402\\SIZE::1
SS_Form1.CTRL{{NAME::chk1_InclExclusions\\TYPE::9\\CAPTION::Use Exclusion Accounts to Exclude Records\\TABSTOP::9\\GROUP::-1\\BROWSER::0\\INTL::3305\\SIZE::1
SS_Form1.CTRL{{NAME::chkParentCost\\TYPE::9\\CAPTION::Ignore Parent Cost\\TABSTOP::10\\GROUP::-1\\BROWSER::0\\INTL::72106\\SIZE::1
SS_Form1.CTRL{{NAME::cmd1_Print\\TYPE::5\\CAPTION::Print\\TABSTOP::11\\GROUP::-1\\BROWSER::0\\INTL::452800\\SIZE::1

Program.Sub.ScreenSS.End
